
public class RepetitiveEx {

	public static void main(String[] args) {
		/*
		 * 	반복문
		 * 
		 * 	# 주어진 조건이 만족하면 반복하는 '제어문'
		 * 	# for문에서 초기식에 들어가는 변수는 '조건변수'라고하며 조건변수를 다루는것이 매우 중요!
		 * 		
		 * 		
		 * 		1. for문
		 * 			- for( 초기식; 조건식; 증감식 ) { 수행문 }
		 * 				초기식 : 최초 한 번만 수행하는 식
		 * 				조건식 : 조건이 참이면 수행문을 수행
		 * 						 거짓이면 for문을 빠져나간다.
		 * 				증감식 : 수행문을 수행 후 증감식이 수행된다.(ex/ ++	--)
		 * 
		 * 				for문 수행 순서
		 * 					1. 초기식 수행
		 * 					2. 조건식 판별 (거짓이면 for문 빠져나감)
		 * 					3. 수행문 수행
		 * 					4. 증감식 수행
		 * 					5. 다시 조건식 판별부터 반복 (거짓이 될때까지)
		 * 				- 각 식들은 생략가능하며, 모두 생략한 경우 항상 true로 간주 (무한루프)
		 * 					for( ; ; )
		 * 
		 * 		2. while문
		 * 			- while( 조건식) { 수행문 }		// if와 같은형태
		 * 				조건식 : 참->수행, 거짓->빠져나옴
		 * 
		 * 				while문 수행 순서
		 * 					1. 조건식 판별
		 * 					2. 수행문 수행
		 * 					3. 조건식 판별(반복)
		 * 				- 조건식 생략 불가!
		 * 
		 * 		3. do~while문
		 * 			- while문과 기본 구조는 같지만 수행문을 '무조건' 1번 수행한다
		 * 
		 * 				do~while문 수행 순서
		 * 					1. 수행문 수행
		 * 					2. 조건식 판별(반복)
		 * 			- while();	<-- 뒤에 꼭 세미콜론을 붙인다.
		 * 
		 * 
		 * 		반복문 공통 문법 : break, continue
		 * 		*** 둘다 현재(바로위의) 반복문에서만 적용됨!!
		 * 			- break : 현재 반복문을 빠져나옴
		 * 				--> switch~case와 반복문에서만 사용
		 * 			- continue : 더 이상 다음 문장을 수행하지 않고 조건 검사로 '점프'한다.
		 * 				--> 반복문에서만 사용
		 * 				--> for문에서의 continue	: continue;를만나면	-> 증감식 -> 조건식
		 * 				--> while문에서의 continue	: continue;를만나면	-> 조건식
		 * 					==> 수행문이 완료되고 난 다음식으로 이동( 완료되었다고 간주 )
		 */

		//	1. for문
		//	조건변수는 어떻게든 조건식이 false가 될 수 있도록 조절(무한루프를 방지)
		//	for문의 초기식에서 '선언'된 변수는, for문이 끝나면 소멸된다!!
		for( int i = 1; i < 5; i++)
		{
			// 수행문
			System.out.printf("for문 : %d \n",i);
		}
		
		
		//	2. while문
		//	결국 while문도 조건식에서 사용할 (조건)변수가 필요하다					-> 초기식
		//	조건식을 빠져나오기 위해서 수행문에서 조건변수의 값을 변화시켜줘야한다.		-> 증감식
		
		int i = 0;		// 여기서의 i는 위 for문의 i와는 다른 변수이다! (for문에서 선언한 i는 for문에서 소멸되기때문)
		while ( i < 6 )
		{
			System.out.printf("while문 : %d \n",i);
			i++;
		}
		
		//	3. do~while문
		int j = 0;
		
		do {
			//	조건식과 상관없이 무조건 진입!
			System.out.println("do~while문!!");
		} while( j != 0 );
	}
}
